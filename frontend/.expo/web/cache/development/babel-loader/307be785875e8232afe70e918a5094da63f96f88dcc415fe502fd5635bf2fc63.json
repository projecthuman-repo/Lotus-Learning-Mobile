{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedEvent from \"./AnimatedEvent\";\nimport { createOrReuseStyleNode } from \"./AnimatedStyle\";\nimport invariant from 'fbjs/lib/invariant';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport { val } from \"../val\";\nfunction sanitizeProps(inputProps) {\n  var props = {};\n  for (var key in inputProps) {\n    var value = inputProps[key];\n    if (value instanceof AnimatedNode && !(value instanceof AnimatedEvent)) {\n      props[key] = value.__nodeID;\n    }\n  }\n  return props;\n}\nexport function createOrReusePropsNode(props, callback, oldNode) {\n  if (props.style) {\n    props = _objectSpread(_objectSpread({}, props), {}, {\n      style: createOrReuseStyleNode(props.style, oldNode && oldNode._props.style)\n    });\n  }\n  var config = sanitizeProps(props);\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedProps(props, config, callback);\n}\nvar AnimatedProps = function (_AnimatedNode) {\n  _inherits(AnimatedProps, _AnimatedNode);\n  var _super = _createSuper(AnimatedProps);\n  function AnimatedProps(props, config, callback) {\n    var _this;\n    _classCallCheck(this, AnimatedProps);\n    _this = _super.call(this, {\n      type: 'props',\n      props: config\n    }, Object.values(props).filter(function (n) {\n      return !(n instanceof AnimatedEvent);\n    }));\n    _this._config = config;\n    _this._props = props;\n    _this._callback = callback;\n    _this.__attach();\n    return _this;\n  }\n  _createClass(AnimatedProps, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedProps, id: \".concat(this.__nodeID);\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var props = {};\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          props[key] = value.__getValue();\n        }\n      }\n      return props;\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var nativeViewTag = findNodeHandle(this._animatedView);\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n      this._disconnectAnimatedView(nativeViewTag);\n      _get(_getPrototypeOf(AnimatedProps.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this._callback();\n      if (!this._animatedView) {\n        return;\n      }\n      val(this);\n    }\n  }, {\n    key: \"setNativeView\",\n    value: function setNativeView(animatedView) {\n      if (this._animatedView === animatedView) {\n        return;\n      }\n      this._animatedView = animatedView;\n      var nativeViewTag = findNodeHandle(this._animatedView);\n      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n      this._connectAnimatedView(nativeViewTag);\n    }\n  }]);\n  return AnimatedProps;\n}(AnimatedNode);","map":{"version":3,"names":["AnimatedNode","AnimatedEvent","createOrReuseStyleNode","invariant","deepEqual","val","sanitizeProps","inputProps","props","key","value","__nodeID","createOrReusePropsNode","callback","oldNode","style","_objectSpread","_props","config","_config","AnimatedProps","_AnimatedNode","_inherits","_super","_createSuper","_this","_classCallCheck","call","type","Object","values","filter","n","_callback","__attach","_createClass","toString","concat","__onEvaluate","__getValue","__detach","nativeViewTag","findNodeHandle","_animatedView","_disconnectAnimatedView","_get","_getPrototypeOf","prototype","update","setNativeView","animatedView","_connectAnimatedView"],"sources":["/Users/negatwo/Documents/GitHub/BLN-App/frontend/node_modules/react-native-reanimated/lib/module/core/AnimatedProps.js"],"sourcesContent":["import { findNodeHandle } from 'react-native';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedEvent from './AnimatedEvent';\nimport { createOrReuseStyleNode } from './AnimatedStyle';\n\nimport invariant from 'fbjs/lib/invariant';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport { val } from '../val';\n\nfunction sanitizeProps(inputProps) {\n  const props = {};\n  for (const key in inputProps) {\n    const value = inputProps[key];\n    if (value instanceof AnimatedNode && !(value instanceof AnimatedEvent)) {\n      props[key] = value.__nodeID;\n    }\n  }\n  return props;\n}\n\nexport function createOrReusePropsNode(props, callback, oldNode) {\n  if (props.style) {\n    props = {\n      ...props,\n      style: createOrReuseStyleNode(\n        props.style,\n        oldNode && oldNode._props.style\n      ),\n    };\n  }\n  const config = sanitizeProps(props);\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedProps(props, config, callback);\n}\n\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, config, callback) {\n    super(\n      { type: 'props', props: config },\n      Object.values(props).filter(n => !(n instanceof AnimatedEvent))\n    );\n    this._config = config;\n    this._props = props;\n    this._callback = callback;\n    this.__attach();\n  }\n\n  toString() {\n    return `AnimatedProps, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    const props = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getValue();\n      }\n    }\n    return props;\n  }\n\n  __detach() {\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree'\n    );\n    this._disconnectAnimatedView(nativeViewTag);\n    super.__detach();\n  }\n\n  update() {\n    this._callback();\n\n    if (!this._animatedView) {\n      return;\n    }\n\n    val(this);\n  }\n\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree'\n    );\n    this._connectAnimatedView(nativeViewTag);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}